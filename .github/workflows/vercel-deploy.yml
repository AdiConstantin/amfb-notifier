name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linter
        run: npm run lint
        continue-on-error: true
        
      - name: Type check
        run: npx tsc --noEmit
        
      - name: Build project
        env:
          # Mock environment variables for build to prevent API route errors
          UPSTASH_REDIS_REST_URL: "https://mock-redis.upstash.io"
          UPSTASH_REDIS_REST_TOKEN: "mock-token"
          RESEND_API_KEY: "re_mock_key"
          RESEND_FROM: "mock@example.com"
          NEXT_PUBLIC_APP_URL: "https://example.com"
          # Skip build-time data collection for API routes
          SKIP_BUILD_STATIC_GENERATION: "true"
        run: npm run build
        
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Check Vercel Secrets
        run: |
          echo "Checking if Vercel secrets are configured..."
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "❌ VERCEL_TOKEN is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_ORG_ID }}" ]; then
            echo "❌ VERCEL_ORG_ID is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "❌ VERCEL_PROJECT_ID is not set"
            exit 1
          fi
          echo "✅ All Vercel secrets are configured"
        shell: bash
        
      - name: Deploy to Vercel (Production)
        run: vercel --prod --token="${{ secrets.VERCEL_TOKEN }}" --confirm
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        
      - name: Deploy to Vercel (Preview)  
        run: vercel --token="${{ secrets.VERCEL_TOKEN }}" --confirm
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        if: github.event_name == 'pull_request'